<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
    http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>cst8277</groupId>
  <artifactId>REST-BloodBank</artifactId>
  <version>1</version>
  <name>REST-BloodBank-Skeleton Solution</name>
  <packaging>war</packaging>
  <description>REST-BloodBank</description>

  <!-- why is everything a property? Because hard-coded values become part of
      Maven's immutable Model object and then their contents can't be changed.
      However, if the value is set in a user-defined property BEFORE the Model
      object is created, then it is possible to do: mvn clean compile -Dfoo.bar.version=1.2.3
      in order to (say for example) test out a newer version of some dependency
      without having to change the pom.xml.
  -->
  <properties>
    <!-- maven properties -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.release>11</maven.compiler.release>
    <maven.compiler.plugin.version>3.8.1</maven.compiler.plugin.version>
    <maven.war.plugin.version>3.2.2</maven.war.plugin.version>
    <maven.surefire.plugin.version>3.0.0-M4</maven.surefire.plugin.version>
	<maven-site-plugin.version>3.9.1</maven-site-plugin.version>
    <maven-project-info-reports-plugin.version>3.1.1</maven-project-info-reports-plugin.version>
    <failOnMissingWebXml>false</failOnMissingWebXml>
    
    <!-- code properties -->
    <jackson.version>2.13.0</jackson.version>
    <jersey.version>2.34</jersey.version>
    <jakartaee-api.version>8.0.0</jakartaee-api.version>
    <jakarta.activation.version>1.2.2</jakarta.activation.version>
    <jakarta.security.enterprise.version>1.0.1</jakarta.security.enterprise.version>
    <microprofile-config.version>2.0</microprofile-config.version>
    <microprofile-openapi.version>2.0</microprofile-openapi.version>
    <connectorj.version>8.0.26</connectorj.version>
    <log4j-api.version>2.14.0</log4j-api.version>
    <log4j-core.version>2.14.0</log4j-core.version>
    <hibernate.core.version>5.4.30.Final</hibernate.core.version>
    
    <!-- test properties -->
    <junit.version>5.7.0</junit.version>
    <org.hamcrest.version>2.2</org.hamcrest.version>

  </properties>
  
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.fasterxml.jackson</groupId>
        <artifactId>jackson-bom</artifactId>
        <version>${jackson.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>
    </dependencies>
  </dependencyManagement>
  
  <dependencies>
    <dependency>
	  <groupId>org.apache.logging.log4j</groupId>
	  <artifactId>log4j-api</artifactId>
	  <version>${log4j-api.version}</version>
	</dependency>
	<dependency>
	  <groupId>org.apache.logging.log4j</groupId>
	  <artifactId>log4j-core</artifactId>
	  <version>${log4j-core.version}</version>
	</dependency>
    <dependency>
      <groupId>jakarta.platform</groupId>
      <artifactId>jakarta.jakartaee-api</artifactId>
      <version>${jakartaee-api.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>jakarta.activation</groupId>
      <artifactId>jakarta.activation-api</artifactId>
      <version>${jakarta.activation.version}</version>
    </dependency>
    <dependency>
	  <groupId>jakarta.security.enterprise</groupId>
	  <artifactId>jakarta.security.enterprise-api</artifactId>
	  <version>${jakarta.security.enterprise.version}</version>
      <scope>provided</scope>
	</dependency>
	<dependency>
      <groupId>org.glassfish.soteria</groupId>
      <artifactId>jakarta.security.enterprise</artifactId>
      <version>${jakarta.security.enterprise.version}</version>
    </dependency>
    <dependency>
	  <groupId>org.eclipse.microprofile.config</groupId>
	  <artifactId>microprofile-config-api</artifactId>
	  <version>${microprofile-config.version}</version>
	</dependency>
	<dependency>
	  <groupId>org.eclipse.microprofile.openapi</groupId>
	  <artifactId>microprofile-openapi-api</artifactId>
	  <version>${microprofile-openapi.version}</version>
	</dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.module</groupId>
      <artifactId>jackson-module-jaxb-annotations</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jsr310</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.jaxrs</groupId>
      <artifactId>jackson-jaxrs-json-provider</artifactId>
    </dependency>
    <dependency>
	  <groupId>org.hibernate</groupId>
	  <artifactId>hibernate-core</artifactId>
	  <version>${hibernate.core.version}</version>
	  <exclusions>
	    <exclusion>
	      <groupId>javax.persistence</groupId>
	      <artifactId>javax.persistence-api</artifactId>
	    </exclusion>
	    <exclusion>
	      <groupId>javax.activation</groupId>
	      <artifactId>javax.activation-api</artifactId>
	    </exclusion>
	    <exclusion>
	      <groupId>javax.xml.bind</groupId>
	      <artifactId>jaxb-api</artifactId>
	    </exclusion>
	  </exclusions>
	</dependency>
	<dependency>
	  <groupId>mysql</groupId>
	  <artifactId>mysql-connector-java</artifactId>
	  <version>${connectorj.version}</version>
	</dependency>
	
	<!-- test dependencies -->
	<dependency>
		<groupId>org.junit.jupiter</groupId>
		<artifactId>junit-jupiter</artifactId>
		<version>${junit.version}</version>
		<scope>test</scope>
	</dependency>
	<dependency>
		<groupId>org.hamcrest</groupId>
		<artifactId>hamcrest</artifactId>
		<version>${org.hamcrest.version}</version>
		<scope>test</scope>
	</dependency>
	<dependency>
		<groupId>org.hamcrest</groupId>
		<artifactId>hamcrest-library</artifactId>
		<version>${org.hamcrest.version}</version>
		<scope>test</scope>
	</dependency>
	<dependency>
		<groupId>org.glassfish.jersey.core</groupId>
		<artifactId>jersey-client</artifactId>
		<version>${jersey.version}</version>
		<exclusions>
			<exclusion>
				<groupId>org.glassfish.hk2.external</groupId>
				<artifactId>jakarta.inject</artifactId>
			</exclusion>
			<exclusion>
				<groupId>jakarta.ws.rs</groupId>
				<artifactId>jakarta.ws.rs-api</artifactId>
			</exclusion>
		</exclusions>
		<scope>test</scope>
	</dependency>
	<dependency>
		<groupId>org.glassfish.jersey.inject</groupId>
		<artifactId>jersey-hk2</artifactId>
		<version>${jersey.version}</version>
		<exclusions>
			<exclusion>
				<groupId>org.glassfish.hk2.external</groupId>
				<artifactId>jakarta.inject</artifactId>
			</exclusion>
		</exclusions>
		<scope>test</scope>
	</dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven.compiler.plugin.version}</version>
        <configuration>
          <release>${maven.compiler.release}</release>
          <encoding>${project.build.sourceEncoding}</encoding>
        </configuration>
      </plugin>
	  <plugin>
		<groupId>org.apache.maven.plugins</groupId>
		<artifactId>maven-surefire-plugin</artifactId>
		<version>${maven.surefire.plugin.version}</version>
		<configuration>
			<testFailureIgnore>true</testFailureIgnore>
            <forkCount>1</forkCount>
            <reuseForks>false</reuseForks>
			<includes>
				<include>**/**Test.java</include>
				<include>**/Test**.java</include>
			</includes>
		</configuration>
	  </plugin>
	  <plugin>
		<groupId>org.apache.maven.plugins</groupId>
		<artifactId>maven-site-plugin</artifactId>
		<version>${maven-site-plugin.version}</version>
	  </plugin>
	  <plugin>
		<groupId>org.apache.maven.plugins</groupId>
		<artifactId>maven-project-info-reports-plugin</artifactId>
		<version>${maven-project-info-reports-plugin.version}</version>
	  </plugin>
      <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-war-plugin</artifactId>
          <version>${maven.war.plugin.version}</version>
          <configuration>
            <archive>
              <addMavenDescriptor>false</addMavenDescriptor>
            </archive>
          </configuration>
      </plugin>
    </plugins>
  </build>

  <reporting>
	<plugins>
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-surefire-report-plugin</artifactId>
		</plugin>
	</plugins>
  </reporting>

</project>